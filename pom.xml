<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.2.4.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.hist</groupId>
	<artifactId>BysApp</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>BysApp</name>
	<description>Demo project for Spring Boot</description>
	<!-- it is very important to add -->
	 <packaging>war</packaging>
	
	<properties>
                 <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
                 <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		         <java.version>1.8</java.version>
	
   </properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		 <!-- TO DEL -->
               <dependency>
                    <groupId>org.modelmapper</groupId>
                    <artifactId>modelmapper</artifactId>
                    <version>2.0.0</version>
                   </dependency>
                   
                <dependency>
                <groupId>com.fasterxml.jackson.dataformat</groupId>
                <artifactId>jackson-dataformat-xml</artifactId>
               </dependency> 
                <!-- TO DEL -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-rest</artifactId>
		</dependency>
		
			<dependency>
        <groupId>commons-fileupload</groupId>
        <artifactId>commons-fileupload</artifactId>
        <version>1.2.1</version> 
    </dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
                
             <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-security</artifactId>
               </dependency>
<!-- to delete 
         <dependency> 
		   <groupId>org.springframework.boot</groupId>
		   <artifactId>spring-boot-starter-web</artifactId>
		 </dependency>

		<dependency>
		 <groupId>org.springframework.boot</groupId>
		 <artifactId>spring-boot-starter-tomcat</artifactId>
		 <scope>provided</scope> 
		</dependency> --> 
      
            
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>
		
<dependency>
<groupId>org.postgresql</groupId>
<artifactId>postgresql</artifactId>
<scope>runtime</scope>
</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		
	 <dependency>
	  <groupId>org.springframework.security</groupId>
	  <artifactId>spring-security-config</artifactId>
	  <version>5.2.1.RELEASE</version>
	  <type>jar</type>
	 </dependency>
      
     
	 <dependency>
	  <groupId>org.springframework</groupId>
	  <artifactId>spring-context</artifactId>
	  <version>5.2.3.RELEASE</version>
	  <type>jar</type>
	 </dependency>
	 
	 <dependency>
	  <groupId>org.springframework.security</groupId>
	  <artifactId>spring-security-core</artifactId>
	  <version>5.2.1.RELEASE</version>
	  <type>jar</type>
	 </dependency>
	 
	 <dependency>
	  <groupId>io.jsonwebtoken</groupId>
	  <artifactId>jjwt</artifactId>
	  <version>0.9.0</version>
	  <type>jar</type>
	 </dependency>
	 
<!-- <dependency>
    <groupId>com.heroku.sdk</groupId>
    <artifactId>heroku-maven-plugin</artifactId>
    <version>3.0.3</version>
</dependency> -->
	</dependencies>

	<build>
		<plugins>
		<plugin>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-maven-plugin</artifactId>
		</plugin> 
	
	<!-- to delete 
		 <plugin> This is for tomcat if you want to create WAR file and build it localy 
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-war-plugin</artifactId>
            <version>3.1.0</version>
            <executions>
                <execution>
                    <id>default-war</id>
                    <phase>prepare-package</phase>
                    <configuration>
                      <failOnMissingWebXml>false</failOnMissingWebXml>
				      <fork>true</fork>
				      <meminitial>1024m</meminitial>
				      <maxmem>2024m</maxmem>
                    </configuration>
                </execution>
            </executions>
        </plugin> -->
			 
	    <!--   This plugin is for jar Heroku's app <plugin>
                <groupId>com.heroku.sdk</groupId>
                <artifactId>heroku-maven-plugin</artifactId>
                <version>3.0.4</version>
                <configuration>
                    <appName>heroku-demo-stackabuse</appName>
                    <includeTarget>false</includeTarget>
                    <includes>
                        <include>${project.build.directory}/${project.build.finalName}.jar</include>
                    </includes>
                    <jdkVersion>1.8</jdkVersion>
                    <processTypes>
                        <web>java $JAVA_OPTS -jar ${project.build.directory}/${project.build.finalName}.jar </web>
                    </processTypes>
                </configuration>
            </plugin>  -->
<!-- 		This plugin is for jar Heroku's app
   <plugin>
			      <groupId>com.heroku.sdk</groupId>
			      <artifactId>heroku-maven-plugin</artifactId>
			      <version>3.0.3</version>
			      <configuration>
			          <appName>Pledika</appName>
			          <includeTarget>false</includeTarget>
			          <includes>
			              <include>${basedir}/${full-artifact-name}</include>
			          </includes>
			          <jdkVersion>1.8</jdkVersion>
			          <processTypes>
			              <web>java $JAVA_OPTS -jar ${full-artifact-name}</web>
			          </processTypes>
			      </configuration>
			  </plugin> -->
			  
		 <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
                <execution>
                    <phase>package</phase>
                    <goals><goal>copy</goal></goals>
                    <configuration>
                        <artifactItems>
                            <artifactItem>
                                <groupId>com.heroku</groupId>
                                <artifactId>webapp-runner</artifactId>
                                <version>9.0.41.0</version>
                                <destFileName>webapp-runner.jar</destFileName>
                            </artifactItem>
                        </artifactItems>
                    </configuration>
                </execution>
            </executions>
        </plugin>
  
  
		</plugins>
	
	</build>

</project>
